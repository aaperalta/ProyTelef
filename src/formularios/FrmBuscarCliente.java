/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package formularios;
import bd.Conexion;
import entidades.Cliente;
import java.awt.Color;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import java.awt.Component;
import java.awt.Image;
import java.awt.Toolkit;


/**
 *
 * @author ernesto
 */
public class FrmBuscarCliente extends javax.swing.JFrame {

    /**
     * Creates new form FrmConsultaPaciente
     */
  private Cliente clie;
 
    public FrmBuscarCliente() {
        this.getContentPane().setBackground(Color.DARK_GRAY);
        initComponents();
        actualizar_descripcion();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        Tb_resultado = new javax.swing.JTable();
        txt_descripcion = new javax.swing.JTextField();
        cb_tipo = new javax.swing.JComboBox();
        btn_consultar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Buscar Cliente");

        Tb_resultado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID CLIENTE", "IDENTIFICACION", "NOMBRE", "DIRECCION", "TELEFONO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Tb_resultado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Tb_resultadoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Tb_resultado);

        txt_descripcion.setEditable(false);

        cb_tipo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "TODOS", "IDENTIFICACION", "NOMBRE", "DIRECCION", "TELEFONO" }));
        cb_tipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_tipoActionPerformed(evt);
            }
        });

        btn_consultar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/consultar.png"))); // NOI18N
        btn_consultar.setText("Consultar");
        btn_consultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_consultarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(btn_consultar)
                        .addGap(26, 26, 26)
                        .addComponent(cb_tipo, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txt_descripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 521, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_consultar)
                    .addComponent(cb_tipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_descripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

  
    
    
    private boolean seleccionValida(){
    if(Tb_resultado.getSelectedRowCount()!=1){
        JOptionPane.showMessageDialog(null, "DEBE SELECCIONAR SOLO UN REGISTRO", "ERROR", JOptionPane.ERROR_MESSAGE);
        return false;  
    }
    return true;
}
    
    private void Tb_resultadoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Tb_resultadoMouseClicked
        
        if(evt.getClickCount() == 2)
        {
            
            if(seleccionValida()){
        String identificacion = this.Tb_resultado.getValueAt(this.Tb_resultado.getSelectedRow(),0).toString();
                
        FrmFactura frm = new FrmFactura(identificacion,this);
          frm.setVisible(true);
       
     
        this.dispose();
            }}  
    }//GEN-LAST:event_Tb_resultadoMouseClicked

private void btn_consultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_consultarActionPerformed
        // TODO add your handling code here:

        limpiar_Tb_resultado();

        if(registroValido()){
            String descripcion1 = this.txt_descripcion.getText();
            String tipo = this.cb_tipo.getSelectedItem().toString();

            Conexion con = new Conexion();
            try{
                con.conectar();
                ArrayList telefono = con.consultarCliente(descripcion1,tipo);
                actualizarTabla(telefono);
            }catch(Exception e){

            }
        }
}//GEN-LAST:event_btn_consultarActionPerformed

private void cb_tipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_tipoActionPerformed
        // TODO add your handling code here:
        limpiar_Tb_resultado();
        actualizar_descripcion();
}//GEN-LAST:event_cb_tipoActionPerformed

    
    
private void actualizarTabla(ArrayList registros){
    Object[][] registros2 = new Object[registros.size()][5];

    for(int i=0;i<registros.size();i++){
        Cliente c = (Cliente)registros.get(i);
        registros2[i][0]= c.getId_cliente();
        registros2[i][1]= c.getIdentificacion();
        registros2[i][2]= c.getNombre();
        registros2[i][3]= c.getDireccion();      
        registros2[i][4]= c.getTelefono();
       
    }
    
    

Tb_resultado.setModel(new javax.swing.table.DefaultTableModel(
            registros2,
            new String [] {
                "ID CLIENTE", "IDENTIFICACION", "NOMBRE", "DIRECCION", "TELEFONO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false,false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });

}
    private boolean registroValido(){

    String tipo = this.cb_tipo.getSelectedItem().toString();
    String descripcion = this.txt_descripcion.getText();
                
    if(!tipo.equals("TODOS")){
       if(descripcion.equals("")){
            JOptionPane.showMessageDialog(null, "DEBE INGRESAR UNA DESCRIPCION", "ERROR", JOptionPane.ERROR_MESSAGE);

       return false;
       }
        
    } return true;

}

private void actualizar_descripcion(){
    String tipo = this.cb_tipo.getSelectedItem().toString();
    this.txt_descripcion.setText(null);
    if(tipo.equals("TODOS"))
        this.txt_descripcion.setEditable(false);
    else
        this.txt_descripcion.setEditable(true);
}

public void limpiar_Tb_resultado(){
    Tb_resultado.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{},new String [] {"ID CLIENTE","IDENTIFICACION", "NOMBRE", "DIRECCION", "TELEFONO"}
            ){boolean[] canEdit = new boolean [] {false,false, false, false, false};public boolean isCellEditable(int rowIndex, int columnIndex){return canEdit [columnIndex];}});

}


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Tb_resultado;
    private javax.swing.JButton btn_consultar;
    private javax.swing.JComboBox cb_tipo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txt_descripcion;
    // End of variables declaration//GEN-END:variables
}
