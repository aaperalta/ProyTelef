/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FrmMantenimientoUsuario.java
 *
 * Created on 07-dic-2013, 22:22:30
 */
package formularios;
import bd.Conexion;
import entidades.Usuario;
import java.awt.Color;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author and1_p
 */
public class FrmMantenimientoUsuario extends javax.swing.JFrame {

    /** Creates new form FrmMantenimientoUsuario */
    public FrmMantenimientoUsuario() {
        initComponents();
        setLocationRelativeTo(null);
        actualizar_descripcion();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btn_consultar = new javax.swing.JButton();
        cb_tipo = new javax.swing.JComboBox();
        txt_descripcion = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tb_resultado = new javax.swing.JTable();
        btn_Editar1 = new javax.swing.JButton();
        btn_Ingresar1 = new javax.swing.JButton();
        btn_eliminar1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("FORMULARIO MANTENIMEINTO USUARIO");

        btn_consultar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/consultar.png"))); // NOI18N
        btn_consultar.setText("Consultar");
        btn_consultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_consultarActionPerformed(evt);
            }
        });

        cb_tipo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "TODOS", "ID_USUARIO", "TIPO", "ESTADO" }));
        cb_tipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_tipoActionPerformed(evt);
            }
        });

        Tb_resultado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID USUARIO", "ESTADO", "ROL", "FECHA REGISTRO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(Tb_resultado);

        btn_Editar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/editar.png"))); // NOI18N
        btn_Editar1.setText("Editar");
        btn_Editar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Editar1ActionPerformed(evt);
            }
        });

        btn_Ingresar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/ingresar.png"))); // NOI18N
        btn_Ingresar1.setText("Ingresar");
        btn_Ingresar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Ingresar1ActionPerformed(evt);
            }
        });

        btn_eliminar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/eliminar.png"))); // NOI18N
        btn_eliminar1.setText("Eliminar");
        btn_eliminar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_eliminar1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_Editar1, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                    .addComponent(btn_Ingresar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_eliminar1, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(btn_consultar)
                        .addGap(18, 18, 18)
                        .addComponent(cb_tipo, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txt_descripcion, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
                        .addGap(72, 72, 72))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 436, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_consultar)
                    .addComponent(cb_tipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_descripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btn_Ingresar1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_Editar1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_eliminar1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void btn_consultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_consultarActionPerformed
        // TODO add your handling code here:
        this.getContentPane().setBackground(Color.MAGENTA);
        limpiar_Tb_resultado();

        if(registroValido()){
            String descripcion = this.txt_descripcion.getText();
            String tipo = this.cb_tipo.getSelectedItem().toString();

            Conexion c = new Conexion();
            try{
                c.conectar();
                ArrayList usuario = c.consultarUsuario(descripcion,tipo);
                actualizarTabla(usuario);
            }catch(Exception e){

            }
        }
}//GEN-LAST:event_btn_consultarActionPerformed



private void actualizarTabla(ArrayList registros){
    Object[][] registros2 = new Object[registros.size()][4];

    for(int i=0;i<registros.size();i++){
        Usuario u = (Usuario)registros.get(i);
        registros2[i][0]= u.getId_usuario();
        registros2[i][1]= u.getEstado();
        registros2[i][2]= u.getRol();
        registros2[i][3]= u.getFecha_Creacion();
       
    }

Tb_resultado.setModel(new javax.swing.table.DefaultTableModel(
            registros2,
            new String [] {
                "ID USUARIO", "ESTADO", "ROL", "FECHA REGISTRO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });

}


private boolean seleccionEditarValida(){
    if(Tb_resultado.getSelectedRowCount()!=1){
        JOptionPane.showMessageDialog(null, "DEBE SELECCIONAR SOLO UN REGISTRO", "ERROR", JOptionPane.ERROR_MESSAGE);
        return false;  
    }
    return true;
}
private boolean seleccionEliminarValida(){
    if(Tb_resultado.getSelectedRowCount()==0){
        JOptionPane.showMessageDialog(null, "SELECCIONE POR LO MENOS UN REGISTRO", "ERROR", JOptionPane.ERROR_MESSAGE);
        return false;
    }

    String[] opciones = new String[] {"SI", "NO"};
    int opcion = JOptionPane.showOptionDialog(null, "ESTA SEGURO QUE DESEA ELIMINAR LOS REGISTROS SELECCIONADOS???", "SALIR",
        JOptionPane.YES_NO_OPTION, JOptionPane.PLAIN_MESSAGE,
        null, opciones, opciones[1]);
    if(opcion==0){
        return true;
    }else{
        return false;
    }
}


private boolean registroValido(){

    String tipo = this.cb_tipo.getSelectedItem().toString();
    String descripcion = this.txt_descripcion.getText();
                
    if(!tipo.equals("TODOS")){
       if(descripcion.equals("")){
            JOptionPane.showMessageDialog(null, "DEBE INGRESAR UNA DESCRIPCION", "ERROR", JOptionPane.ERROR_MESSAGE);

       return false;
       }
        
    } return true;

}

private void actualizar_descripcion(){
    String tipo = this.cb_tipo.getSelectedItem().toString();
    this.txt_descripcion.setText(null);
    if(tipo.equals("TODOS"))
        this.txt_descripcion.setEditable(false);
    else
        this.txt_descripcion.setEditable(true);
}

public void limpiar_Tb_resultado(){
    Tb_resultado.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{},new String [] {"ID USUARIO", "ESTADO", "ROL", "FECHA REGISTRO"}
            ){boolean[] canEdit = new boolean [] {false, false, false, false};public boolean isCellEditable(int rowIndex, int columnIndex){return canEdit [columnIndex];}});

}


public void consultar_usuario(){
    this.btn_consultarActionPerformed(null);
}
    


private void cb_tipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_tipoActionPerformed
        // TODO add your handling code here:
        limpiar_Tb_resultado();
        actualizar_descripcion();
}//GEN-LAST:event_cb_tipoActionPerformed

private void btn_Editar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Editar1ActionPerformed
            this.getContentPane().setBackground(Color.CYAN);        
            if(seleccionEditarValida()){
            String id_user = this.Tb_resultado.getValueAt(this.Tb_resultado.getSelectedRow(),0).toString();
            FrmEditarUsuario frm = new FrmEditarUsuario(id_user,this);
            frm.setVisible(true);
        }
}//GEN-LAST:event_btn_Editar1ActionPerformed

private void btn_Ingresar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Ingresar1ActionPerformed
        this.getContentPane().setBackground(Color.DARK_GRAY);
        FrmIngresarUsuario frm = new FrmIngresarUsuario(this);
        frm.setVisible(true);
}//GEN-LAST:event_btn_Ingresar1ActionPerformed

private void btn_eliminar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_eliminar1ActionPerformed
      this.getContentPane().setBackground(Color.BLACK);
      if(seleccionEliminarValida()){
            String id = "";
            int [] indices = this.Tb_resultado.getSelectedRows();
            for(int i=0; i< indices.length; i++){
                String USUARIO = this.Tb_resultado.getValueAt(indices[i],0).toString();
                id = id + "'"+USUARIO+"',";
            }
            id = id.substring(0,id.length()-1);
            try{
                Conexion con = new Conexion();
                con.conectar();

                if(con.eliminarUsuario(id)){

                    JOptionPane.showMessageDialog(null, "SE ELIMINO CORRECTAMENTE", "EXITO", JOptionPane.INFORMATION_MESSAGE);
                    this.btn_consultarActionPerformed(null);

                }else{
                    JOptionPane.showMessageDialog(null, "ERROR DE ELIMINACION", "ERROR", JOptionPane.ERROR_MESSAGE);
                }
            }catch(Exception e){
                JOptionPane.showMessageDialog(null, "ERROR EN LA CONEXION", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        }
     
}//GEN-LAST:event_btn_eliminar1ActionPerformed

    /**
     * @param args the command line arguments
     */
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Tb_resultado;
    private javax.swing.JButton btn_Editar1;
    private javax.swing.JButton btn_Ingresar1;
    private javax.swing.JButton btn_consultar;
    private javax.swing.JButton btn_eliminar1;
    private javax.swing.JComboBox cb_tipo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txt_descripcion;
    // End of variables declaration//GEN-END:variables
}
