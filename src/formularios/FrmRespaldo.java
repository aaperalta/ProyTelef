/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FrmRespaldo.java
 *
 * Created on 19-dic-2013, 13:49:49
 */
package formularios;
import bd.Conexion;
import bd.Conexion1;
import entidades.Detalle_Factura;
import java.awt.Color;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author and1_p
 */
public class FrmRespaldo extends javax.swing.JFrame {
    ArrayList detalle_facturas;
ArrayList<Detalle_Factura> tabla_listado = new ArrayList<Detalle_Factura>();

    /** Creates new form FrmRespaldo */
    public FrmRespaldo() {
        this.getContentPane().setBackground(Color.gray);  
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        Tb_resultado = new javax.swing.JTable();
        btn_consultar = new javax.swing.JButton();
        btn_consultar1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        Tb_resultado1 = new javax.swing.JTable();
        BT_pasar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("FORMULARIO RESPALDO");

        Tb_resultado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID FACTURA", "ID TELEFONO", "CANTIDAD", "PRECIO", "TOTAL"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(Tb_resultado);

        btn_consultar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/consultar.png"))); // NOI18N
        btn_consultar.setText("CONSULTAR");
        btn_consultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_consultarActionPerformed(evt);
            }
        });

        btn_consultar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/respaldo icon.png"))); // NOI18N
        btn_consultar1.setText("CONSULTAR RESPALDO");
        btn_consultar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_consultar1ActionPerformed(evt);
            }
        });

        Tb_resultado1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID FACTURA", "ID TELEFONO", "CANTIDAD", "PRECIO", "TOTAL"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(Tb_resultado1);

        BT_pasar.setText("PASAR >>>");
        BT_pasar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BT_pasarActionPerformed(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Drive-Disk-256.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_consultar))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(BT_pasar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 90, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_consultar1, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(103, 103, 103)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btn_consultar, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(BT_pasar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btn_consultar1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(59, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void btn_consultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_consultarActionPerformed
       
       limpiar_Tb_resultado();

       Conexion c = new Conexion();
        try{
            c.conectar();
            ArrayList detalle_fa = c.consultarDetale_factura();
            actualizarTabla(detalle_fa);
        }catch(Exception e){
            
 }    
}//GEN-LAST:event_btn_consultarActionPerformed

private void btn_consultar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_consultar1ActionPerformed

  limpiar_Tb_resultado2();

       Conexion1 c1 = new Conexion1();
        try{
            c1.conectar();
            ArrayList detalle_fa = c1.consultarDetale_factura();
            actualizarTabla2(detalle_fa);
        }catch(Exception e){
            
 }      
    
}//GEN-LAST:event_btn_consultar1ActionPerformed

private void BT_pasarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BT_pasarActionPerformed

    
       if(seleccionPasarValida()){
            String codigo = "";
            int [] indices = this.Tb_resultado.getSelectedRows();
                for(int i=0; i< indices.length; i++){
                    String codigo1 = this.Tb_resultado.getValueAt(indices[i],0).toString();
                    codigo = codigo +codigo1+",";
                }
              System.out.println(codigo);
                codigo = codigo.substring(0,codigo.length()-1);
                    try{
                        Conexion c = new Conexion();
                        c.conectar();
                        ArrayList<Detalle_Factura> detalle_facturas = c.consultarDetale_facturaPorID(codigo);

                        Conexion1 c1 = new Conexion1();
                        try{
                            c1.conectar();
                            for(int i=0; i< indices.length; i++
                                    ){
                                if(c1.ingresarDetalleFacturas(detalle_facturas.get(i))){
                                consultar_detalle_factura2 ();
                                int pasaron = 0;
                                 pasaron++ ;
                               }
                               else{ 
                                    int nopasaron =0;
                                    nopasaron++;

                              }

                            }

                        }catch(Exception e){

                        JOptionPane.showMessageDialog(null, "OCURRIO UN ERROR EN LA CONEXION", "ERROR", JOptionPane.ERROR_MESSAGE);
                        }

                    }catch(Exception e){
                        JOptionPane.showMessageDialog(null, "OCURRIO UN ERROR EN LA CONEXION", "ERROR", JOptionPane.ERROR_MESSAGE);
                    }
        }     

    
}//GEN-LAST:event_BT_pasarActionPerformed

private boolean seleccionPasarValida(){
    if(Tb_resultado.getSelectedRowCount()==0){
        JOptionPane.showMessageDialog(null, "SELECCIONE POR LO MENOS UN REGISTRO", "ERROR", JOptionPane.ERROR_MESSAGE);
        return false;
    }

    String[] opciones = new String[] {"OK",""};
    int opcion = JOptionPane.showOptionDialog(null, "REGISTROS MIGRADOS CON EXITO", "OK",
        JOptionPane.OK_OPTION, JOptionPane.PLAIN_MESSAGE,
        null, opciones, opciones[1]);
    if(opcion==0){
        return true;
    }else{
        return false;
    }
} 

private void actualizarTabla(ArrayList registros){
        Object[][] registros2 = new Object[registros.size()][5];

        for(int i=0;i<registros.size();i++){

            Detalle_Factura fa = (Detalle_Factura)registros.get(i);

            registros2[i][0]= fa.getId_factura();
            registros2[i][1]= fa.getId_telefono();
            registros2[i][2]= fa.getCantidad();
            registros2[i][3]= fa.getPrecio();
            registros2[i][4]= fa.getTotal();
        
    }

Tb_resultado.setModel(new javax.swing.table.DefaultTableModel(
            registros2,
            new String [] {
                "ID FACTURA", "ID TELEFONO", "CANTIDAD", "PRECIO", "TOTAL"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false,false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });

}

private void actualizarTabla2(ArrayList registros){
        Object[][] registros2 = new Object[registros.size()][5];

        for(int i=0;i<registros.size();i++){

            Detalle_Factura fa = (Detalle_Factura)registros.get(i);

            registros2[i][0]= fa.getId_factura();
            registros2[i][1]= fa.getId_telefono();
            registros2[i][2]= fa.getCantidad();
            registros2[i][3]= fa.getPrecio();
            registros2[i][4]= fa.getTotal();
        
    }

Tb_resultado1.setModel(new javax.swing.table.DefaultTableModel(
            registros2,
            new String [] {
                "ID FACTURA", "ID TELEFONO", "CANTIDAD", "PRECIO", "TOTAL"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false,false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });

}

public void consultar_detalle_factura(){
this.btn_consultarActionPerformed(null);
} 

public void consultar_detalle_factura2(){
this.btn_consultar1ActionPerformed(null);
}

public void limpiar_Tb_resultado(){
        Tb_resultado.setModel(new javax.swing.table.DefaultTableModel(
                    new Object[][]{},new String [] {"ID FACTURA", "ID TELEFONO", "CANTIDAD", "PRECIO", "TOTAL"}
                ){boolean[] canEdit = new boolean [] {false, false, false, false,false};public boolean isCellEditable(int rowIndex, int columnIndex){return canEdit [columnIndex];}});

}

public void limpiar_Tb_resultado2(){
        Tb_resultado1.setModel(new javax.swing.table.DefaultTableModel(
                    new Object[][]{},new String [] {"ID FACTURA", "ID TELEFONO", "CANTIDAD", "PRECIO", "TOTAL"}
                ){boolean[] canEdit = new boolean [] {false, false, false, false,false};public boolean isCellEditable(int rowIndex, int columnIndex){return canEdit [columnIndex];}});

}



    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BT_pasar;
    private javax.swing.JTable Tb_resultado;
    private javax.swing.JTable Tb_resultado1;
    private javax.swing.JButton btn_consultar;
    private javax.swing.JButton btn_consultar1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
